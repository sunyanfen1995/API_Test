#!/usr/bin/env python# -*- coding: utf-8 -*-"""-------------------------------------------------   File Name：     Description : 标签管理的业务层   Author :    sunyanfen   CreateDate：-------------------------------------------------"""import yamlfrom api.util import Utilfrom api.baseapi import BaseApiclass Tag(BaseApi):    def __init__(self):        self.token = Util().get_token()        self.params['token'] = self.token        with open("../api/tag.yaml", encoding='utf-8') as f:            self.data = yaml.load(f)    def add_tags(self, tagname, tagid=''):        """        添加标签功能        :return:        """        # if tagid == None:        #     tagid = ''        self.params['tagname'] = tagname        self.params['tagid'] = tagid        return self.send(self.data['add_tag'])    def update_tags(self, tagname, tagid):        """        添加标签功能        :return:        """        self.params['tagname'] = tagname        self.params['tagid'] = tagid        return self.send(self.data['update_tag'])    def get_taglist(self):        """        添加标签功能        :return:        """        return self.send(self.data['get_taglist'])    def delete_tag(self, tagid):        """        删除标签        :return:        """        self.params['tagid'] = tagid        return self.send(self.data['delete_tag'])    def get_taguser(self):        """        获取标签成员        :return:        """        return self.send(self.data['get_taguser'])    def add_taguser(self,tagid,userlist='', partylist=''):        """        获取标签成员        :return:        """        #todo :userlist,partylist 这两个标签二者取一个        # if userlist == '':        #     partylist=[]        # elif len(partylist) ==0:        #     userlist=[]        self.params['tagid'] = tagid        self.params['userlist'] = userlist        self.params['partylist'] = partylist        return self.send(self.data['add_taguser'])    def delete_taguser(self, tagid, userlist, partylist):        """        获取标签成员        :return:        """        # todo :userlist,partylist 这两个标签二者取一个        self.params['tagid'] = tagid        self.params['userlist'] = userlist        self.params['partylist'] = partylist        return self.send(self.data['delete_taguser'])