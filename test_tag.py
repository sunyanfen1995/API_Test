#!/usr/bin/env python# -*- coding: utf-8 -*-"""-------------------------------------------------   File Name：     Description : 标签管理测试用例   Author :    sunyanfen   CreateDate：-------------------------------------------------"""from api.tag import Tagclass TestTag:    def test_addTag(self):        """测试创建标签"""        r = Tag().add_tags('test_tagname01', '4')        assert u'created' in r['errmsg']        return r['tagid']    def test_updateTag(self):        """测试更新标签"""        r = Tag().update_tags('edited_tagname01','4')        assert u'updated' == r['errmsg']    def test_deleteTag(self):        """测试删除标签"""        r = Tag().delete_tag('4')        assert u'deleted' == r['errmsg']    def test_getTaguser(self):       r = Tag().get_taglist()       print(r)       assert  u'ok' == r['errmsg']       #校验taglist里的数据    def test_Tag_all(self):        """测试标签流程-集成测试"""        r = Tag().add_tags(tagname='tag_name7', tagid='')        assert u'created' in r['errmsg']        tagid = r['tagid']        result = Tag().get_taglist()        num = len(result['taglist'])-1        assert u'ok' == result['errmsg']        assert result['taglist'][int(num)]['tagid'] > 0        assert u'tag_name7' == result['taglist'][int(num)]['tagname']        assert u'updated' == Tag().update_tags('edited_tagname7', tagid=str(tagid))['errmsg']        print(Tag().get_taglist())        assert u'edited_tagname7' == Tag().get_taglist()['taglist'][int(num)]['tagname']        assert u'deleted' == Tag().delete_tag(str(tagid))['errmsg']        assert len(Tag().get_taglist()['taglist']) != int(num-1)    # def test_addTaguser(self):    #     """增加标签成员"""    #     r = Tag().add_taguser(tagid='4', userlist=['maoxian01'])    #     assert u'ok' == r['errmsg']    #    # def test_deleteTaguser(self):    #     """删除标签成员"""    #     r = Tag().delete_taguser(tagid='4', userlist='maoxian01')    #     assert u'deleted' == r['errmsg']